pipeline {
    agent any

    environment {
        registryCredentials = "nexus"
        registry = "192.168.56.10:8083"
    }
   
    stages {
        stage('Install dependencies') {
            steps {
                script {
                    sh('npm install')
                }
            }
        }

        stage('Unit Test') {
            steps {
                script {
                    sh('npm test')
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {  
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                } 
            }  
        }
 stage('Building images (node and mongo)') {
      steps{
        
        script {
         sh('docker compose build')
        }
      }
    }
stage('Deploy  to Nexus') {
     steps{  
         script {

             docker.withRegistry("http://"+registry, registryCredentials ) {
            sh('docker push $registry/nodemongoapp:6.0 ')
          }
        }
      }
    }
 stage('Run application ') {
     steps{  
         script {
           docker.withRegistry("http://"+registry, registryCredentials ) {

            sh('docker pull $registry/nodemongoapp:6.0 ')

            sh('docker-compose up -d ')
          }
        }
      }
    }

stage('Deploy to Kubernetes') {
    steps {
        script {
            // Apply Kubernetes configurations
            sh 'kubectl apply -f k8s/deployment.yaml'
            sh 'kubectl apply -f k8s/service.yaml'
            
            // Verify deployment
            sh 'kubectl rollout status deployment/nodeapp-deployment'
            
            // Get service URL (for Minikube)
            sh 'minikube service nodeapp-service --url'
        }
    }
}

    } // <-- This closes the 'stages' block
} // <-- This closes the 'pipeline' block